name: Get Version
description: Reads the VERSION file from the repo root and outputs it.
inputs:
  build-type:
    description: "Type of build: ci or release"
    required: false
    default: ci
outputs:
  version:
    description: "The version string for this build (ci or release)"
    value: ${{ steps.read_version.outputs.version }}
  debian_version:
    description: "The Debian version string for this build (ci or release). Replaces '-' with '~' for Debian packaging."
    value: ${{ steps.read_version.outputs.debian_version }}
  base_version:
    description: "The base version from the VERSION file"
    value: ${{ steps.read_version.outputs.base_version }}
  full_version:
    description: "The version from the VERSION file with the run number appended"
    value: ${{ steps.read_version.outputs.full_version }}
runs:
  using: "composite"
  steps:
    - id: read_version
      shell: bash
      run: |
        BUILD_FILE="$GITHUB_WORKSPACE/build_number.txt"
        if [ -f "$BUILD_FILE" ]; then
          echo "[get-version] ✅ Found build_number.txt, using existing version info:"
          cat "$BUILD_FILE"
          while IFS= read -r line; do
            echo "$line" >> $GITHUB_OUTPUT
          done < "$BUILD_FILE"
        else
          echo "[get-version] ⚠️ build_number.txt not found, generating version info..."
          BASE_VERSION=$(cat $GITHUB_WORKSPACE/VERSION)
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          DATE_STR=$(date -u +"%Y%m%d%H%M%S")
          if [ "${{ inputs.build-type }}" = "release" ]; then
            VERSION="$BASE_VERSION"
            DEBIAN_VERSION="$BASE_VERSION"
            UV_VERSION="$BASE_VERSION"
          else
            VERSION="${BASE_VERSION}-ci${DATE_STR}.${SHORT_SHA}"
            DEBIAN_VERSION="${BASE_VERSION}~ci${DATE_STR}.${SHORT_SHA}"
            UV_VERSION="${BASE_VERSION}+ci${DATE_STR}.${SHORT_SHA}"
          fi
          echo "[get-version] ℹ️ base_version=$BASE_VERSION"
          echo "[get-version] ℹ️ full_version=$VERSION"
          echo "[get-version] ℹ️ version=$VERSION"
          echo "[get-version] ℹ️ debian_version=$DEBIAN_VERSION"
          echo "[get-version] ℹ️ uv_version=$UV_VERSION"
          echo "base_version=$BASE_VERSION" | tee -a $GITHUB_OUTPUT > "$BUILD_FILE"
          echo "full_version=$VERSION" | tee -a $GITHUB_OUTPUT >> "$BUILD_FILE"
          echo "version=$VERSION" | tee -a $GITHUB_OUTPUT >> "$BUILD_FILE"
          echo "debian_version=$DEBIAN_VERSION" | tee -a $GITHUB_OUTPUT >> "$BUILD_FILE"
          echo "uv_version=$UV_VERSION" | tee -a $GITHUB_OUTPUT >> "$BUILD_FILE"
          echo "[get-version] Saved version info to $BUILD_FILE"
        fi

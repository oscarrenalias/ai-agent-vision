name: Release

env:
  PYTHON_VERSION: "3.12"

on:
  workflow_run:
    workflows: ["Backend CI"]
    types:
      - completed

jobs:
  build-and-push-backend:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get build version
        id: get_version
        uses: ./.github/actions/get-version

      - name: Print build version
        run: |
          echo "::group::Backend Build version info"
          echo "ðŸš§ðŸš§ðŸš§ Main version: ${{ steps.get_version.outputs.version }}"
          echo "ðŸš§ðŸš§ðŸš§ Full version: ${{ steps.get_version.outputs.full_version }}"
          echo "::endgroup::"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          docker system prune -af
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 1
              gc = true
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:latest
            ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/backend:${{ steps.get_version.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push-ui:
    runs-on: ubuntu-latest
    needs: build-and-push-backend
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get build version
        id: get_version
        uses: ./.github/actions/get-version

      - name: Print build version
        run: |
          echo "::group::UI Build version info"
          echo "ðŸš§ðŸš§ðŸš§ Main version: ${{ steps.get_version.outputs.version }}"
          echo "ðŸš§ðŸš§ðŸš§ Full version: ${{ steps.get_version.outputs.full_version }}"
          echo "::endgroup::"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          docker system prune -af
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 1
              gc = true
      - name: Install frontend dependencies and build (outside Docker)
        run: |
          cd ui
          npm ci
          npm run build
      - name: Build and push ui image (CI Dockerfile)
        uses: docker/build-push-action@v5
        with:
          context: ./ui
          file: ./ui/Dockerfile.ci
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/ui:latest
            ghcr.io/${{ github.repository }}/ui:${{ github.sha }}
            ghcr.io/${{ github.repository }}/ui:${{ steps.get_version.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=min

  prepare-compose:
    runs-on: ubuntu-latest
    needs: [build-and-push-backend, build-and-push-ui]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get build version
        id: get_version
        uses: ./.github/actions/get-version

      - name: Prepare docker-compose.yml for release
        run: |
          sed -e "s|ghcr.io/OWNER/REPO/backend:latest|ghcr.io/${{ github.repository }}/backend:${{ steps.get_version.outputs.version }}|g" \
              -e "s|ghcr.io/OWNER/REPO/ui:latest|ghcr.io/${{ github.repository }}/ui:${{ steps.get_version.outputs.version }}|g" \
              docker-compose.yml > docker-compose.release.yml
      - name: Upload docker-compose release artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-release
          path: docker-compose.release.yml

  release:
    runs-on: ubuntu-latest
    needs: prepare-compose
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get build version
        id: get_version
        uses: ./.github/actions/get-version

      - name: Download docker-compose artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-compose-release
          path: ./release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: |
            Docker images for backend and ui are published to GitHub Container Registry with tags `latest` and `${{ steps.get_version.outputs.version }}`.
            This release contains the docker-compose.yml for deployment.
          files: ./release/docker-compose.release.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

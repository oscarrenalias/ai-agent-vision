name: Docker Release

env:
  PYTHON_VERSION: "3.12"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          cd backend
          uv sync --group dev
      - name: Get build version
        id: get_version
        run: |
          cd backend
          echo "version=$(uv run python -m setuptools_scm)" >> $GITHUB_OUTPUT
      - name: Print build version
        run: |
          echo "ðŸš§ðŸš§ðŸš§ Building version: ${{ steps.get_version.outputs.version }} ðŸš§ðŸš§ðŸš§"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          docker system prune -af
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 1
              gc = true
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/backend:latest
            ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/backend:${{ steps.get_version.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=min
          # this is required for the setuptools_scm to find the correct version for the packaging
          build-args: |
            SETUPTOOLS_SCM_PRETEND_VERSION=${{ steps.get_version.outputs.version }}

  build-and-push-ui:
    runs-on: ubuntu-latest
    needs: build-and-push-backend
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          docker system prune -af
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 1
              gc = true
      - name: Install frontend dependencies and build (outside Docker)
        run: |
          cd ui
          npm ci
          npm run build
      - name: Build and push ui image (CI Dockerfile)
        uses: docker/build-push-action@v5
        with:
          context: ./ui
          file: ./ui/Dockerfile.ci
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/ui:latest
            ghcr.io/${{ github.repository }}/ui:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=min

  prepare-compose:
    runs-on: ubuntu-latest
    needs: [build-and-push-backend, build-and-push-ui]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Prepare docker-compose.yml for release
        run: |
          sed -e "s|ghcr.io/OWNER/REPO/backend:latest|ghcr.io/${{ github.repository }}/backend:${{ github.sha }}|g" \
              -e "s|ghcr.io/OWNER/REPO/ui:latest|ghcr.io/${{ github.repository }}/ui:${{ github.sha }}|g" \
              docker-compose.yml > docker-compose.release.yml
      - name: Upload docker-compose release artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-release
          path: docker-compose.release.yml

  release:
    runs-on: ubuntu-latest
    needs: prepare-compose
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Download docker-compose artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-compose-release
          path: ./release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: docker-release-${{ github.sha }}
          name: Docker Compose Release ${{ github.sha }}
          body: |
            Docker images for backend and ui are published to GitHub Container Registry with tags `latest` and `${{ github.sha }}`.
            This release contains the docker-compose.yml for deployment.
          files: ./release/docker-compose.release.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

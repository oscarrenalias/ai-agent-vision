name: Backend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
          pip install -r backend/requirements.txt

      - name: Lint with flake8
        run: |
          # Critical errors only
          flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics
          # All other errors - with the same ignores as pre-commit
          flake8 backend --count --extend-ignore=E203,W503,E501,D100,D101,D102,D103,D104 --statistics

      - name: Check formatting with black
        run: |
          black --check backend

      - name: Check imports with isort
        run: |
          isort --check-only --profile black backend

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: receipts
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r backend/requirements.txt

      - name: Test with pytest
        run: |
          cd backend
          pytest --cov=. --cov-report=xml
        env:
          DATASTORE_TYPE: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: receipts
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HUGGINGFACEHUB_API_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel

      - name: Build package
        run: |
          cd backend
          python -m build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: |
            backend/dist

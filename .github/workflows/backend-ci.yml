name: Backend CI

env:
  PYTHON_VERSION: "3.12"

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          cd backend
          uv sync --group dev

      - name: Lint with flake8
        run: |
          cd backend
          # Critical errors only - these checks should never be ignored
          uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # All other errors - using setup.cfg config file
          uv run flake8 . --count --statistics

      - name: Check formatting with black
        run: |
          cd backend
          uv run black --check .

      - name: Check imports with isort
        run: |
          cd backend
          uv run isort --check-only --profile black .

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          cd backend
          uv sync --group dev

      - name: Test with pytest
        run: |
          cd backend
          uv run pytest --cov=. --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          cd backend
          uv sync --group dev

      - name: Get build version
        id: get_version
        uses: ./.github/actions/get-version
        with:
          build-type: ci

      - name: Print build version
        run: |
          echo "Build version: ${{ steps.get_version.outputs.version }}"

      - name: Build package
        run: |
          cd backend
          uv version ${{ steps.get_version.outputs.version }}
          uv build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: |
            backend/dist

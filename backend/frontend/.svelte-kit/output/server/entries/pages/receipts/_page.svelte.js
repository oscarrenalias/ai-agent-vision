import { c as create_ssr_component, a as subscribe, e as escape, v as validate_component } from "../../../chunks/ssr.js";
import { i as isChatOpen, C as ChatWindow } from "../../../chunks/ChatWindow.js";
const css = {
  code: ".receipt-upload.svelte-rgc7on.svelte-rgc7on{max-width:1000px;margin:0 auto;padding-bottom:3rem}h1.svelte-rgc7on.svelte-rgc7on{margin-bottom:2rem}h2.svelte-rgc7on.svelte-rgc7on{margin:2rem 0 1rem}h3.svelte-rgc7on.svelte-rgc7on{margin:1.5rem 0 1rem}.upload-container.svelte-rgc7on.svelte-rgc7on{display:flex;flex-direction:column;gap:2rem;margin-bottom:2rem}.upload-area.svelte-rgc7on.svelte-rgc7on{border:2px dashed #ccc;border-radius:8px;padding:1rem;text-align:center;cursor:pointer}.upload-label.svelte-rgc7on.svelte-rgc7on{display:block;cursor:pointer}.upload-placeholder.svelte-rgc7on.svelte-rgc7on{padding:4rem 2rem;display:flex;flex-direction:column;align-items:center;gap:1rem}.icon.svelte-rgc7on.svelte-rgc7on{font-size:3rem}.file-input.svelte-rgc7on.svelte-rgc7on{display:none}.preview-image.svelte-rgc7on.svelte-rgc7on{max-width:100%;max-height:400px;margin:0 auto;display:block}.controls.svelte-rgc7on.svelte-rgc7on{display:flex;flex-direction:column;gap:1rem}.submit-button.svelte-rgc7on.svelte-rgc7on{padding:0.75rem;font-size:1.1rem}.error-message.svelte-rgc7on.svelte-rgc7on{color:#d32f2f;padding:0.75rem;background-color:#ffebee;border-radius:4px}.success-message.svelte-rgc7on.svelte-rgc7on{color:#2e7d32;padding:0.75rem;background-color:#e8f5e9;border-radius:4px;display:flex;justify-content:space-between;align-items:center}.view-history-link.svelte-rgc7on.svelte-rgc7on{color:#2e7d32;font-weight:600;text-decoration:underline}.receipt-results.svelte-rgc7on.svelte-rgc7on{margin-top:3rem;background-color:white;padding:1.5rem;border-radius:8px;box-shadow:0 2px 8px rgba(0, 0, 0, 0.1)}table.svelte-rgc7on.svelte-rgc7on{width:100%;border-collapse:collapse;margin:1rem 0}th.svelte-rgc7on.svelte-rgc7on,td.svelte-rgc7on.svelte-rgc7on{padding:0.75rem;text-align:left;border-bottom:1px solid #eee}th.svelte-rgc7on.svelte-rgc7on{background-color:#f5f5f5;font-weight:600}tr.svelte-rgc7on.svelte-rgc7on:hover{background-color:#f9f9f9}tr.has-discount.svelte-rgc7on.svelte-rgc7on{background-color:#fff8e1}tr.has-discount.svelte-rgc7on.svelte-rgc7on:hover{background-color:#ffecb3}.discount-badge.svelte-rgc7on.svelte-rgc7on{display:inline-block;background-color:#4caf50;color:white;padding:0.2rem 0.5rem;border-radius:4px;font-size:0.8rem;margin-right:0.5rem}.discount-amount.svelte-rgc7on.svelte-rgc7on{color:#4caf50;font-weight:600}.loyalty-summary.svelte-rgc7on.svelte-rgc7on{margin:1.5rem 0;padding:1rem;background-color:#f5f5f5;border-radius:8px}.summary-cards.svelte-rgc7on.svelte-rgc7on{display:flex;flex-wrap:wrap;gap:1rem;margin-top:1rem}.summary-card.svelte-rgc7on.svelte-rgc7on{flex:1;min-width:200px;background-color:white;padding:1.5rem;border-radius:8px;box-shadow:0 2px 4px rgba(0, 0, 0, 0.1);text-align:center}.summary-card.highlight.svelte-rgc7on.svelte-rgc7on{background-color:#e8f5e9;border:1px solid #4caf50}.summary-value.svelte-rgc7on.svelte-rgc7on{font-size:1.8rem;font-weight:700;color:#333;margin-bottom:0.5rem}.summary-card.highlight.svelte-rgc7on .summary-value.svelte-rgc7on{color:#2e7d32}.summary-label.svelte-rgc7on.svelte-rgc7on{font-size:0.9rem;color:#666}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import ProcessingIndicator from '$lib/components/ProcessingIndicator.svelte';\\n  import ChatButton from '$lib/components/ChatButton.svelte';\\n  import ChatWindow from '$lib/components/ChatWindow.svelte';\\n  //import { isChatOpen, currentReceiptData, openChat, closeChat } from '$lib/stores/chatStore';\\n  import { setReceiptData, openChat, closeChat, isChatOpen } from '$lib/stores/chatStore';\\n\\n  //import { isChatOpen } from '$lib/stores/chatStore';\\n\\n  let file;\\n  let previewUrl = '';\\n  let isUploading = false;\\n  let uploadResult = null;\\n  let error = null;\\n  let receiptData = null;\\n  let totalLoyaltyDiscount = 0;\\n  let discountedItemsCount = 0;\\n  let processingProgress = 25; // Initial progress value\\n  let processingInterval; // For simulating progress\\n\\n  function handleFileChange(event) {\\n    const selectedFile = event.target.files[0];\\n    if (selectedFile) {\\n      file = selectedFile;\\n      previewUrl = URL.createObjectURL(selectedFile);\\n      // Reset previous results\\n      uploadResult = null;\\n      receiptData = null;\\n      error = null;\\n      totalLoyaltyDiscount = 0;\\n      discountedItemsCount = 0;\\n\\n      // Clear the global receipt data\\n      setReceiptData(null);\\n    }\\n  }\\n\\n  function calculateDiscountSummary(items) {\\n    let total = 0;\\n    let count = 0;\\n\\n    if (items && items.length > 0) {\\n      items.forEach((item) => {\\n        if (item.has_loyalty_discount && item.loyalty_discount) {\\n          total += parseFloat(item.loyalty_discount);\\n          count++;\\n        }\\n      });\\n    }\\n\\n    totalLoyaltyDiscount = total;\\n    discountedItemsCount = count;\\n  }\\n\\n  // Function to simulate progress during processing\\n  function startProgressSimulation() {\\n    processingProgress = 10; // Start at 10%\\n\\n    // Clear any existing interval\\n    if (processingInterval) clearInterval(processingInterval);\\n\\n    // Update progress every 10 seconds to simulate the long-running process\\n    processingInterval = setInterval(() => {\\n      if (processingProgress < 40) {\\n        processingProgress += 10;\\n      }\\n    }, 5000); // 5 seconds between updates\\n  }\\n\\n  // Function to stop progress simulation\\n  function stopProgressSimulation() {\\n    if (processingInterval) {\\n      clearInterval(processingInterval);\\n      processingInterval = null;\\n    }\\n    processingProgress = 100; // Complete the progress\\n  }\\n\\n  let jobId = null;\\n  let pollingInterval = null;\\n\\n  async function handleSubmit() {\\n    if (!file) {\\n      error = 'Please select a file first';\\n      return;\\n    }\\n\\n    error = null;\\n    isUploading = true;\\n    receiptData = null;\\n    jobId = null;\\n\\n    // Start simulating progress\\n    startProgressSimulation();\\n\\n    try {\\n      const formData = new FormData();\\n      formData.append('file', file);\\n\\n      // Submit the file and get a job ID\\n      const response = await fetch('/api/process', {\\n        method: 'POST',\\n        body: formData,\\n      });\\n\\n      const result = await response.json();\\n\\n      if (response.ok && result.job_id) {\\n        jobId = result.job_id;\\n        console.log(\`Job started with ID: \${jobId}\`);\\n\\n        // Start polling for job status\\n        startPolling(jobId);\\n      } else {\\n        error = result.message || 'Failed to start receipt processing';\\n        isUploading = false;\\n        stopProgressSimulation();\\n      }\\n    } catch (err) {\\n      error = 'Error uploading file: ' + (err instanceof Error ? err.message : String(err));\\n      isUploading = false;\\n      stopProgressSimulation();\\n    }\\n  }\\n\\n  function startPolling(jobId) {\\n    // Clear any existing polling\\n    if (pollingInterval) {\\n      clearInterval(pollingInterval);\\n    }\\n\\n    // Poll every 5 seconds\\n    pollingInterval = setInterval(async () => {\\n      try {\\n        const response = await fetch(\`/api/jobs/\${jobId}\`);\\n        const jobStatus = await response.json();\\n\\n        console.log('Job status:', jobStatus);\\n\\n        if (jobStatus.status === 'completed') {\\n          // Job completed successfully\\n          clearInterval(pollingInterval);\\n          isUploading = false;\\n          stopProgressSimulation();\\n\\n          // Set the receipt data\\n          receiptData = jobStatus.result;\\n          calculateDiscountSummary(receiptData.items);\\n          setReceiptData(receiptData);\\n          uploadResult = { status: 'success' };\\n        } else if (jobStatus.status === 'failed') {\\n          // Job failed\\n          clearInterval(pollingInterval);\\n          isUploading = false;\\n          stopProgressSimulation();\\n          error = jobStatus.error || 'Receipt processing failed';\\n        } else if (jobStatus.status === 'processing') {\\n          // Job is still processing, update progress\\n          processingProgress = 50; // Set to middle progress while processing\\n        }\\n      } catch (err) {\\n        console.error('Error polling job status:', err);\\n      }\\n    }, 5000); // Check every 5 seconds\\n  }\\n\\n  // Clean up polling on component unmount\\n  onMount(() => {\\n    return () => {\\n      if (pollingInterval) {\\n        clearInterval(pollingInterval);\\n      }\\n      // Clean up object URL when component is destroyed\\n      if (previewUrl) {\\n        URL.revokeObjectURL(previewUrl);\\n      }\\n      // Clear any running interval\\n      if (processingInterval) {\\n        clearInterval(processingInterval);\\n      }\\n    };\\n  });\\n\\n  // When receipt data is available, set it in the store for the chat component to use\\n  $: if (receiptData) {\\n    setReceiptData(receiptData);\\n  }\\n\\n  onMount(() => {\\n    return () => {\\n      // Clean up object URL when component is destroyed\\n      if (previewUrl) {\\n        URL.revokeObjectURL(previewUrl);\\n      }\\n      // Clear any running interval\\n      if (processingInterval) {\\n        clearInterval(processingInterval);\\n      }\\n    };\\n  });\\n<\/script>\\n\\n<svelte:head>\\n  <title>AI Agent Vision - Receipt Upload</title>\\n</svelte:head>\\n\\n<div class=\\"receipt-upload\\">\\n  <h1>Upload Receipt</h1>\\n\\n  <div class=\\"upload-container\\">\\n    <div class=\\"upload-area\\">\\n      <label for=\\"receipt-upload\\" class=\\"upload-label\\">\\n        {#if previewUrl}\\n          <img src={previewUrl} alt=\\"Receipt preview\\" class=\\"preview-image\\" />\\n        {:else}\\n          <div class=\\"upload-placeholder\\">\\n            <span class=\\"icon\\">📷</span>\\n            <span>Click to select a receipt image</span>\\n          </div>\\n        {/if}\\n      </label>\\n      <input\\n        type=\\"file\\"\\n        id=\\"receipt-upload\\"\\n        accept=\\"image/*\\"\\n        on:change={handleFileChange}\\n        class=\\"file-input\\"\\n      />\\n    </div>\\n\\n    <div class=\\"controls\\">\\n      <button on:click={handleSubmit} disabled={isUploading || !file} class=\\"submit-button\\">\\n        {isUploading ? 'Processing...' : 'Analyze Receipt'}\\n      </button>\\n\\n      {#if error}\\n        <div class=\\"error-message\\">\\n          {error}\\n        </div>\\n      {/if}\\n\\n      {#if uploadResult && !receiptData}\\n        <div class=\\"success-message\\">Receipt processed successfully, but no data was returned.</div>\\n      {/if}\\n\\n      {#if receiptData}\\n        <div class=\\"success-message\\">\\n          Receipt processed successfully!\\n          <a href=\\"/receipts/history\\" class=\\"view-history-link\\">View Receipt History</a>\\n        </div>\\n      {/if}\\n    </div>\\n  </div>\\n\\n  {#if isUploading}\\n    <ProcessingIndicator\\n      progress={processingProgress}\\n      message=\\"Processing your receipt...\\"\\n      submessage=\\"This may take 2-3 minutes to complete. Please don't refresh the page.\\"\\n    />\\n  {/if}\\n\\n  {#if receiptData}\\n    <div class=\\"receipt-results\\">\\n      <h2>Receipt Analysis Results</h2>\\n\\n      <!-- Receipt Summary -->\\n      {#if receiptData.receipt_data}\\n        <div class=\\"receipt-summary\\">\\n          <h3>Receipt Summary</h3>\\n          <table>\\n            <tbody>\\n              <tr>\\n                <th>Date</th>\\n                <td>{receiptData.receipt_data.date || 'N/A'}</td>\\n              </tr>\\n              <tr>\\n                <th>Place</th>\\n                <td>{receiptData.receipt_data.place || 'N/A'}</td>\\n              </tr>\\n              <tr>\\n                <th>Total</th>\\n                <td\\n                  >{receiptData.receipt_data.total\\n                    ? \`€\${receiptData.receipt_data.total.toFixed(2)}\`\\n                    : 'N/A'}</td\\n                >\\n              </tr>\\n              <tr>\\n                <th>Total Savings</th>\\n                <td>{receiptData.receipt_data.total_savings || 'N/A'}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      {/if}\\n\\n      <!-- Loyalty Discount Summary -->\\n      {#if receiptData.items && receiptData.items.length > 0}\\n        <div class=\\"loyalty-summary\\">\\n          <h3>Loyalty Discount Summary</h3>\\n          <div class=\\"summary-cards\\">\\n            <div class=\\"summary-card\\">\\n              <div class=\\"summary-value\\">{discountedItemsCount}</div>\\n              <div class=\\"summary-label\\">Items with Discounts</div>\\n            </div>\\n            <div class=\\"summary-card highlight\\">\\n              <div class=\\"summary-value\\">€{totalLoyaltyDiscount.toFixed(2)}</div>\\n              <div class=\\"summary-label\\">Total Savings</div>\\n            </div>\\n            <div class=\\"summary-card\\">\\n              <div class=\\"summary-value\\">\\n                {discountedItemsCount > 0\\n                  ? \`€\${(totalLoyaltyDiscount / discountedItemsCount).toFixed(2)}\`\\n                  : '€0.00'}\\n              </div>\\n              <div class=\\"summary-label\\">Average Discount per Item</div>\\n            </div>\\n          </div>\\n        </div>\\n      {/if}\\n\\n      <!-- Receipt Items -->\\n      {#if receiptData.items && receiptData.items.length > 0}\\n        <div class=\\"receipt-items\\">\\n          <h3>Receipt Items</h3>\\n          <table>\\n            <thead>\\n              <tr>\\n                <th>Item</th>\\n                <th>Quantity</th>\\n                <th>Unit Price</th>\\n                <th>Total Price</th>\\n                <th>Loyalty Discount</th>\\n                <th>Category</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              {#each receiptData.items as item}\\n                <tr class={item.has_loyalty_discount ? 'has-discount' : ''}>\\n                  <td>{item.name_en || item.name_fi || 'N/A'}</td>\\n                  <td>{item.quantity ? \`\${item.quantity} \${item.unit_of_measure || ''}\` : 'N/A'}</td\\n                  >\\n                  <td>{item.unit_price ? \`€\${item.unit_price.toFixed(2)}\` : 'N/A'}</td>\\n                  <td>{item.total_price ? \`€\${item.total_price.toFixed(2)}\` : 'N/A'}</td>\\n                  <td>\\n                    {#if item.has_loyalty_discount}\\n                      <span class=\\"discount-badge\\">Yes</span>\\n                      {#if item.loyalty_discount}\\n                        <span class=\\"discount-amount\\">€{item.loyalty_discount.toFixed(2)}</span>\\n                      {/if}\\n                    {:else}\\n                      -\\n                    {/if}\\n                  </td>\\n                  <td>\\n                    {#if item.item_category}\\n                      {item.item_category.level_1 || ''}\\n                      {item.item_category.level_2 ? \`> \${item.item_category.level_2}\` : ''}\\n                      {item.item_category.level_3 ? \`> \${item.item_category.level_3}\` : ''}\\n                    {:else}\\n                      N/A\\n                    {/if}\\n                  </td>\\n                </tr>\\n              {/each}\\n            </tbody>\\n          </table>\\n        </div>\\n      {:else}\\n        <p>No items found in the receipt.</p>\\n      {/if}\\n    </div>\\n  {/if}\\n  {#if receiptData}\\n    <!-- Chat window component (only shown when open) -->\\n    <ChatWindow isOpen={$isChatOpen} {receiptData} on:close={closeChat} />\\n  {:else}\\n    <!-- Chat window without receipt data -->\\n    <ChatWindow isOpen={$isChatOpen} on:close={closeChat} />\\n  {/if}\\n</div>\\n\\n<style>\\n  .receipt-upload {\\n    max-width: 1000px;\\n    margin: 0 auto;\\n    padding-bottom: 3rem;\\n  }\\n\\n  h1 {\\n    margin-bottom: 2rem;\\n  }\\n\\n  h2 {\\n    margin: 2rem 0 1rem;\\n  }\\n\\n  h3 {\\n    margin: 1.5rem 0 1rem;\\n  }\\n\\n  .upload-container {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 2rem;\\n    margin-bottom: 2rem;\\n  }\\n\\n  .upload-area {\\n    border: 2px dashed #ccc;\\n    border-radius: 8px;\\n    padding: 1rem;\\n    text-align: center;\\n    cursor: pointer;\\n  }\\n\\n  .upload-label {\\n    display: block;\\n    cursor: pointer;\\n  }\\n\\n  .upload-placeholder {\\n    padding: 4rem 2rem;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 1rem;\\n  }\\n\\n  .icon {\\n    font-size: 3rem;\\n  }\\n\\n  .file-input {\\n    display: none;\\n  }\\n\\n  .preview-image {\\n    max-width: 100%;\\n    max-height: 400px;\\n    margin: 0 auto;\\n    display: block;\\n  }\\n\\n  .controls {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n  }\\n\\n  .submit-button {\\n    padding: 0.75rem;\\n    font-size: 1.1rem;\\n  }\\n\\n  .error-message {\\n    color: #d32f2f;\\n    padding: 0.75rem;\\n    background-color: #ffebee;\\n    border-radius: 4px;\\n  }\\n\\n  .success-message {\\n    color: #2e7d32;\\n    padding: 0.75rem;\\n    background-color: #e8f5e9;\\n    border-radius: 4px;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n  }\\n\\n  .view-history-link {\\n    color: #2e7d32;\\n    font-weight: 600;\\n    text-decoration: underline;\\n  }\\n\\n  .receipt-results {\\n    margin-top: 3rem;\\n    background-color: white;\\n    padding: 1.5rem;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  table {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin: 1rem 0;\\n  }\\n\\n  th,\\n  td {\\n    padding: 0.75rem;\\n    text-align: left;\\n    border-bottom: 1px solid #eee;\\n  }\\n\\n  th {\\n    background-color: #f5f5f5;\\n    font-weight: 600;\\n  }\\n\\n  tr:hover {\\n    background-color: #f9f9f9;\\n  }\\n  tr.has-discount {\\n    background-color: #fff8e1;\\n  }\\n\\n  tr.has-discount:hover {\\n    background-color: #ffecb3;\\n  }\\n\\n  .discount-badge {\\n    display: inline-block;\\n    background-color: #4caf50;\\n    color: white;\\n    padding: 0.2rem 0.5rem;\\n    border-radius: 4px;\\n    font-size: 0.8rem;\\n    margin-right: 0.5rem;\\n  }\\n\\n  .discount-amount {\\n    color: #4caf50;\\n    font-weight: 600;\\n  }\\n\\n  /* Loyalty Summary Styles */\\n  .loyalty-summary {\\n    margin: 1.5rem 0;\\n    padding: 1rem;\\n    background-color: #f5f5f5;\\n    border-radius: 8px;\\n  }\\n\\n  .summary-cards {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 1rem;\\n    margin-top: 1rem;\\n  }\\n\\n  .summary-card {\\n    flex: 1;\\n    min-width: 200px;\\n    background-color: white;\\n    padding: 1.5rem;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    text-align: center;\\n  }\\n\\n  .summary-card.highlight {\\n    background-color: #e8f5e9;\\n    border: 1px solid #4caf50;\\n  }\\n\\n  .summary-value {\\n    font-size: 1.8rem;\\n    font-weight: 700;\\n    color: #333;\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  .summary-card.highlight .summary-value {\\n    color: #2e7d32;\\n  }\\n\\n  .summary-label {\\n    font-size: 0.9rem;\\n    color: #666;\\n  }\\n</style>\\n"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $isChatOpen, $$unsubscribe_isChatOpen;
  $$unsubscribe_isChatOpen = subscribe(isChatOpen, (value) => $isChatOpen = value);
  $$result.css.add(css);
  $$unsubscribe_isChatOpen();
  return `${$$result.head += `<!-- HEAD_svelte-m2x57s_START -->${$$result.title = `<title>AI Agent Vision - Receipt Upload</title>`, ""}<!-- HEAD_svelte-m2x57s_END -->`, ""} <div class="receipt-upload svelte-rgc7on"><h1 class="svelte-rgc7on" data-svelte-h="svelte-1mspa6t">Upload Receipt</h1> <div class="upload-container svelte-rgc7on"><div class="upload-area svelte-rgc7on"><label for="receipt-upload" class="upload-label svelte-rgc7on">${`<div class="upload-placeholder svelte-rgc7on" data-svelte-h="svelte-cu4pff"><span class="icon svelte-rgc7on">📷</span> <span>Click to select a receipt image</span></div>`}</label> <input type="file" id="receipt-upload" accept="image/*" class="file-input svelte-rgc7on"></div> <div class="controls svelte-rgc7on"><button ${"disabled"} class="submit-button svelte-rgc7on">${escape("Analyze Receipt")}</button> ${``} ${``} ${``}</div></div> ${``} ${``} ${` ${validate_component(ChatWindow, "ChatWindow").$$render($$result, { isOpen: $isChatOpen }, {}, {})}`} </div>`;
});
export {
  Page as default
};

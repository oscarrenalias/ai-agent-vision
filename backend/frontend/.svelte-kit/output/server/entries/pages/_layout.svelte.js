import { c as create_ssr_component, a as subscribe, v as validate_component } from "../../chunks/ssr.js";
import { C as ChatWindow, o as openChat, i as isChatOpen, c as currentReceiptData } from "../../chunks/ChatWindow.js";
const css$1 = {
  code: ".chat-button.svelte-zg7gpq.svelte-zg7gpq{position:fixed;bottom:20px;right:20px;background-color:var(--color-accent, #4caf50);color:white;border:none;border-radius:25px;padding:12px 20px;display:flex;align-items:center;gap:8px;font-weight:500;cursor:pointer;box-shadow:0 2px 10px rgba(0, 0, 0, 0.2);transition:transform 0.2s ease, box-shadow 0.2s ease;z-index:900}.chat-button.svelte-zg7gpq.svelte-zg7gpq:hover{transform:translateY(-2px);box-shadow:0 4px 12px rgba(0, 0, 0, 0.25)}.chat-button.svelte-zg7gpq svg.svelte-zg7gpq{width:20px;height:20px}",
  map: '{"version":3,"file":"ChatButton.svelte","sources":["ChatButton.svelte"],"sourcesContent":["<script>\\n  export let onClick = () => {};\\n<\/script>\\n\\n<button class=\\"chat-button\\" on:click={onClick} aria-label=\\"Open chat\\">\\n  <svg\\n    xmlns=\\"http://www.w3.org/2000/svg\\"\\n    width=\\"24\\"\\n    height=\\"24\\"\\n    viewBox=\\"0 0 24 24\\"\\n    fill=\\"none\\"\\n    stroke=\\"currentColor\\"\\n    stroke-width=\\"2\\"\\n    stroke-linecap=\\"round\\"\\n    stroke-linejoin=\\"round\\"\\n  >\\n    <path d=\\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\\" />\\n  </svg>\\n  <span>Ask about receipts</span>\\n</button>\\n\\n<style>\\n  .chat-button {\\n    position: fixed;\\n    bottom: 20px;\\n    right: 20px;\\n    background-color: var(--color-accent, #4caf50);\\n    color: white;\\n    border: none;\\n    border-radius: 25px;\\n    padding: 12px 20px;\\n    display: flex;\\n    align-items: center;\\n    gap: 8px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\\n    transition: transform 0.2s ease, box-shadow 0.2s ease;\\n    z-index: 900;\\n  }\\n\\n  .chat-button:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);\\n  }\\n\\n  .chat-button svg {\\n    width: 20px;\\n    height: 20px;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAsBE,wCAAa,CACX,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IAAI,cAAc,CAAC,QAAQ,CAAC,CAC9C,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,GAAG,CACR,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACzC,UAAU,CAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CACrD,OAAO,CAAE,GACX,CAEA,wCAAY,MAAO,CACjB,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAC3C,CAEA,0BAAY,CAAC,iBAAI,CACf,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IACV"}'
};
const ChatButton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { onClick = () => {
  } } = $$props;
  if ($$props.onClick === void 0 && $$bindings.onClick && onClick !== void 0) $$bindings.onClick(onClick);
  $$result.css.add(css$1);
  return `<button class="chat-button svelte-zg7gpq" aria-label="Open chat" data-svelte-h="svelte-5089kp"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="svelte-zg7gpq"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path></svg> <span>Ask about receipts</span> </button>`;
});
const css = {
  code: ".app.svelte-ul5tib.svelte-ul5tib{display:flex;flex-direction:column;min-height:100vh}header.svelte-ul5tib.svelte-ul5tib{background-color:var(--color-bg-1);box-shadow:0 2px 4px rgba(0, 0, 0, 0.1)}header.svelte-ul5tib .container.svelte-ul5tib{display:flex;justify-content:space-between;align-items:center;padding:1rem;max-width:1200px;margin:0 auto}.logo.svelte-ul5tib a.svelte-ul5tib{font-size:1.5rem;font-weight:700;color:var(--color-accent);text-decoration:none}nav.svelte-ul5tib ul.svelte-ul5tib{display:flex;list-style:none;margin:0;padding:0;gap:1.5rem}nav.svelte-ul5tib a.svelte-ul5tib{color:var(--color-text);text-decoration:none;font-weight:500}nav.svelte-ul5tib a.svelte-ul5tib:hover{color:var(--color-accent)}main.svelte-ul5tib.svelte-ul5tib{flex:1}footer.svelte-ul5tib.svelte-ul5tib{background-color:var(--color-bg-1);padding:1rem 0;text-align:center;margin-top:2rem}footer.svelte-ul5tib .container.svelte-ul5tib{max-width:1200px;margin:0 auto}",
  map: `{"version":3,"file":"+layout.svelte","sources":["+layout.svelte"],"sourcesContent":["<script>\\n  import '../app.css';\\n  import ChatButton from '$lib/components/ChatButton.svelte';\\n  import ChatWindow from '$lib/components/ChatWindow.svelte';\\n  import { isChatOpen, currentReceiptData, openChat, closeChat } from '$lib/stores/chatStore';\\n<\/script>\\n\\n<div class=\\"app\\">\\n  <header>\\n    <div class=\\"container\\">\\n      <div class=\\"logo\\">\\n        <a href=\\"/\\">AI Agent Vision</a>\\n      </div>\\n      <nav>\\n        <ul>\\n          <li><a href=\\"/\\">Home</a></li>\\n          <li><a href=\\"/receipts\\">Upload Receipt</a></li>\\n          <li><a href=\\"/receipts/history\\">Receipt History</a></li>\\n        </ul>\\n      </nav>\\n    </div>\\n  </header>\\n\\n  <main>\\n    <slot />\\n  </main>\\n\\n  <footer>\\n    <div class=\\"container\\">\\n      <p>&copy; 2025 AI Agent Vision</p>\\n    </div>\\n  </footer>\\n\\n  <!-- Chat components that are available on all pages -->\\n  <ChatWindow isOpen={$isChatOpen} receiptData={$currentReceiptData} on:close={closeChat} />\\n  <ChatButton onClick={openChat} />\\n</div>\\n\\n<style>\\n  .app {\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 100vh;\\n  }\\n\\n  header {\\n    background-color: var(--color-bg-1);\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  header .container {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 1rem;\\n    max-width: 1200px;\\n    margin: 0 auto;\\n  }\\n\\n  .logo a {\\n    font-size: 1.5rem;\\n    font-weight: 700;\\n    color: var(--color-accent);\\n    text-decoration: none;\\n  }\\n\\n  nav ul {\\n    display: flex;\\n    list-style: none;\\n    margin: 0;\\n    padding: 0;\\n    gap: 1.5rem;\\n  }\\n\\n  nav a {\\n    color: var(--color-text);\\n    text-decoration: none;\\n    font-weight: 500;\\n  }\\n\\n  nav a:hover {\\n    color: var(--color-accent);\\n  }\\n\\n  main {\\n    flex: 1;\\n  }\\n\\n  footer {\\n    background-color: var(--color-bg-1);\\n    padding: 1rem 0;\\n    text-align: center;\\n    margin-top: 2rem;\\n  }\\n\\n  footer .container {\\n    max-width: 1200px;\\n    margin: 0 auto;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAuCE,gCAAK,CACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,KACd,CAEA,kCAAO,CACL,gBAAgB,CAAE,IAAI,YAAY,CAAC,CACnC,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CACzC,CAEA,oBAAM,CAAC,wBAAW,CAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IACZ,CAEA,mBAAK,CAAC,eAAE,CACN,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,IAAI,cAAc,CAAC,CAC1B,eAAe,CAAE,IACnB,CAEA,iBAAG,CAAC,gBAAG,CACL,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,GAAG,CAAE,MACP,CAEA,iBAAG,CAAC,eAAE,CACJ,KAAK,CAAE,IAAI,YAAY,CAAC,CACxB,eAAe,CAAE,IAAI,CACrB,WAAW,CAAE,GACf,CAEA,iBAAG,CAAC,eAAC,MAAO,CACV,KAAK,CAAE,IAAI,cAAc,CAC3B,CAEA,gCAAK,CACH,IAAI,CAAE,CACR,CAEA,kCAAO,CACL,gBAAgB,CAAE,IAAI,YAAY,CAAC,CACnC,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IACd,CAEA,oBAAM,CAAC,wBAAW,CAChB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IACZ"}`
};
const Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $isChatOpen, $$unsubscribe_isChatOpen;
  let $currentReceiptData, $$unsubscribe_currentReceiptData;
  $$unsubscribe_isChatOpen = subscribe(isChatOpen, (value) => $isChatOpen = value);
  $$unsubscribe_currentReceiptData = subscribe(currentReceiptData, (value) => $currentReceiptData = value);
  $$result.css.add(css);
  $$unsubscribe_isChatOpen();
  $$unsubscribe_currentReceiptData();
  return `<div class="app svelte-ul5tib"><header class="svelte-ul5tib" data-svelte-h="svelte-1sm4igr"><div class="container svelte-ul5tib"><div class="logo svelte-ul5tib"><a href="/" class="svelte-ul5tib">AI Agent Vision</a></div> <nav class="svelte-ul5tib"><ul class="svelte-ul5tib"><li><a href="/" class="svelte-ul5tib">Home</a></li> <li><a href="/receipts" class="svelte-ul5tib">Upload Receipt</a></li> <li><a href="/receipts/history" class="svelte-ul5tib">Receipt History</a></li></ul></nav></div></header> <main class="svelte-ul5tib">${slots.default ? slots.default({}) : ``}</main> <footer class="svelte-ul5tib" data-svelte-h="svelte-lfd80a"><div class="container svelte-ul5tib"><p>Â© 2025 AI Agent Vision</p></div></footer>  ${validate_component(ChatWindow, "ChatWindow").$$render(
    $$result,
    {
      isOpen: $isChatOpen,
      receiptData: $currentReceiptData
    },
    {},
    {}
  )} ${validate_component(ChatButton, "ChatButton").$$render($$result, { onClick: openChat }, {}, {})} </div>`;
});
export {
  Layout as default
};
